rules_version = '2';
service cloud.firestore {
  // match /{document=**} {
  //   	allow read: if true;
  //   }
  match /databases/{database}/documents {
    // function isUserAdminV(user, ambiente) {
    //   	return get(/databases/$(database)/documents/ambiente/$(user)/users/$(ambiente.ambiente)).data.typeAccess == "Admin"
    //   }
    match /{path=**}/branches/{branch} {
        allow read: if true
      }
      match /ambiente/{ambiente} {

        function isUserAdmin(user) {
          return get(/databases/$(database)/documents/ambiente/$(ambiente)/users/$(user)).data.typeAccess == "Admin"
        }
        match /environment/{doc} {
          allow read: if request.auth.uid != null;
          allow create: if isUserAdmin(request.auth.uid);
          allow update: if isUserAdmin(request.auth.uid);
        }
        match /transactions/{transactions} {
          allow read: if true;
        }
        match /rates/{rates} {
          allow read: if true;
          allow create: if isUserAdmin(request.auth.uid);
          allow update: if isUserAdmin(request.auth.uid);
        }
        match /newsletter/{doc} {
          allow read: if isUserAdmin(request.auth.uid);
          allow create: if request.auth.uid != null;
          allow update: if isUserAdmin(request.auth.uid);
        }
        match /subdomains/{doc} {
          allow read: if true;
          allow create: if true;
          allow update: if request.auth.uid == resource.data.id || isUserAdmin(request.auth.uid);
        }
        match /clients/{doc} {
          allow read: if true;
          allow create: if true;
          allow update: if request.auth.uid == resource.data.id || isUserAdmin(request.auth.uid);
            match /branches/{doc} {
            allow read: if true;
            allow create: if true;
            allow update: if request.auth.uid == resource.data.id || isUserAdmin(request.auth.uid);
          }
        }
        match /users/{usr} {
          allow read: if true;
          allow create: if true;
          allow update: if (request.auth.uid == resource.data.id && (!request.resource.data.diff(resource.data).affectedKeys()
            .hasAny(['typeAccess', 'rol', 'status', 'estatus']))) || isUserAdmin(request.auth.uid);
        }
        match /users/{usr}/ambientes/{ambientes} {
          allow read: if true;
        }
        match /orders/{ord} {
          // allow read: if request.auth.uid == resource.data.customer_id || isUserAdmin(request.auth.uid);
          allow read: if true;
          allow create: if true;
          allow update: if isUserAdmin(request.auth.uid) || (request.resource.data.diff(resource.data).affectedKeys()
            .hasOnly(['userComment']));
        }
        match /address/{add} {
          allow read: if request.auth.uid == resource.data.user || isUserAdmin(request.auth.uid);
          allow create: if true;
          allow update: if request.auth.uid == resource.data.user;
        }
        match /filters/{filter} {
          allow read: if true;
          allow create: if isUserAdmin(request.auth.uid);
          allow update: if isUserAdmin(request.auth.uid);
        }
        match /categorias/{cat} {
          allow read: if true;
          allow create: if isUserAdmin(request.auth.uid);
          allow update: if isUserAdmin(request.auth.uid);
        }
        match /menu/{men} {
          allow read: if true;
          allow create: if isUserAdmin(request.auth.uid);
          allow update: if isUserAdmin(request.auth.uid);
        }
        match /transactions/{transactions} {
          allow read: if true;
        }
        match /coupons/{coupons} {
          allow read: if true;
          allow create: if isUserAdmin(request.auth.uid);
          allow update: if isUserAdmin(request.auth.uid);
        }
        match /config/{cfg} {
          allow read: if true;
          allow create: if isUserAdmin(request.auth.uid);
          allow update: if isUserAdmin(request.auth.uid);
        }
        match /groupComp/{grpcmp} {
          allow read: if true;
          allow create: if isUserAdmin(request.auth.uid);
          allow update: if isUserAdmin(request.auth.uid);
        }
        match /riders/{rider} {
          allow read: if true;
          allow create: if isUserAdmin(request.auth.uid);
          allow update: if isUserAdmin(request.auth.uid);
        }
        match /item/{itm} {
          allow read: if true;
          allow create: if isUserAdmin(request.auth.uid);
          allow update: if isUserAdmin(request.auth.uid);
        }
        match /itemGroup/{itmgrp} {
          allow read: if true;
          allow create: if isUserAdmin(request.auth.uid);
          allow update: if isUserAdmin(request.auth.uid);
        }
        match /localizations/{lc} {
          allow read: if true;
          allow create: if isUserAdmin(request.auth.uid);
          allow update: if isUserAdmin(request.auth.uid);
        }
        match /editor/{editor} {
          allow read: if true;
          allow create: if isUserAdmin(request.auth.uid);
          allow update: if isUserAdmin(request.auth.uid);
        }
        match /localZones/{lc} {
          allow read: if true;
          allow create: if isUserAdmin(request.auth.uid);
          allow update: if isUserAdmin(request.auth.uid);
        }
        match /promos/{prm} {
          allow read: if true;
          allow create: if isUserAdmin(request.auth.uid);
          allow update: if isUserAdmin(request.auth.uid);
        }
      }
    }
}